@using ADOPets.Web.Common.Extensions
@using Resources = ADOPets.Web.Resources.Wording
@model ADOPets.Web.ViewModels.Insurance.EditViewModel

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@Resources.CloseButton</span></button>
            <h4 class="modal-title" id="myModalLabel">@Resources.Insurance_Edit_Title</h4>
        </div>
        @using (Ajax.BeginForm("Edit", "Insurance", new AjaxOptions
                                                   {
                                                       UpdateTargetId = "insuranceList",
                                                       HttpMethod = "POST",
                                                       InsertionMode = InsertionMode.Replace,
                                                       OnSuccess = "CloseDialogInsurance"
                                                   }, new { @id = "editInsuranceForm", @class = "form-horizontal defaultForm", @role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">

                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PetId)


                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.Name, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = Resources.Insurance_Edit_NamePlaceHolder })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.AccountNumber, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.AccountNumber, new { @class = "form-control", placeholder = Resources.Insurance_Edit_AccountNumberPlaceHolder })
                        @Html.ValidationMessageFor(model => model.AccountNumber)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.StartDate, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control datepicker datepickerCustomValidation", placeholder = Resources.Insurance_Edit_StartDatePlaceHolder, @Value = Model.StartDate.ToString("d") })
@*                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>*@
                            @Html.ValidationMessageFor(model => model.StartDate)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.EndDate, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control datepicker datepickerCustomValidation", placeholder = Resources.Insurance_Edit_EndDatePlaceHolder, @Value = Model.EndDate.ToString("d") })
                            @Html.ValidationMessageFor(model => model.EndDate)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = @Resources.Insurance_Edit_Phone })
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", @rows = "2", placeholder = Resources.Insurance_Edit_CommentPlaceHolder })
                        @Html.ValidationMessageFor(model => model.Comment)
                    </div>
                </div>
                <div class="form-group" style="margin-bottom: 0;">
                    <div class="col-sm-offset-4 col-sm-8">
                        <div class="checkbox" style="padding-top: 0;">
                            @Html.CheckBoxFor(model => model.NotificationMail)
                            @Html.Label(Resources.Insurance_Edit_NotificationMail)
                            @Html.ValidationMessageFor(model => model.NotificationMail)
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">@Resources.Insurance_Edit_SaveChanges</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Insurance_Edit_Cancel</button>
            </div>            
        }
    </div>
</div>

<script src="~/Scripts/customs/views/Insurance/Form.js"></script>

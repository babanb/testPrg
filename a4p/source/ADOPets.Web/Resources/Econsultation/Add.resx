<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgreeTerms" xml:space="preserve">
    <value>I agree to e-consultation</value>
  </data>
  <data name="AssignVet" xml:space="preserve">
    <value>Assign Veterinarian</value>
  </data>
  <data name="AssignVetRequired" xml:space="preserve">
    <value>Please assign a Veterinarian</value>
  </data>
  <data name="BillingInformation" xml:space="preserve">
    <value>Billing Information</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="ConfirmMedicalRecords" xml:space="preserve">
    <value>I have reviewed and confirm that my Pet's medical records are current.</value>
  </data>
  <data name="ConsultationCountryRequired" xml:space="preserve">
    <value>Country is required</value>
  </data>
  <data name="ConsultationDayRequired" xml:space="preserve">
    <value>Date of consultation is required</value>
  </data>
  <data name="ConsultationTImeRequired" xml:space="preserve">
    <value>Time of consultation is required</value>
  </data>
  <data name="ContactType" xml:space="preserve">
    <value>What is the best way to contact you?</value>
  </data>
  <data name="CountryOfEconsultation" xml:space="preserve">
    <value>Where will you be located during this consultation?</value>
  </data>
  <data name="DayOfEconsultation" xml:space="preserve">
    <value>What day would you like to have your consult?</value>
  </data>
  <data name="EmailPlaceHolder" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="NextStep" xml:space="preserve">
    <value>Next Step</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PetCondition" xml:space="preserve">
    <value>What is the Pet condition?</value>
  </data>
  <data name="PetConditionPlaceHolder" xml:space="preserve">
    <value>Enter Pet Condition</value>
  </data>
  <data name="PetConditionRequired" xml:space="preserve">
    <value>Pet condition is required</value>
  </data>
  <data name="PetName" xml:space="preserve">
    <value>Pet Name</value>
  </data>
  <data name="PetNamePlaceHolder" xml:space="preserve">
    <value>Enter Pet Name</value>
  </data>
  <data name="PetNameRequired" xml:space="preserve">
    <value>Pet name is required</value>
  </data>
  <data name="PhonePlaceHolder" xml:space="preserve">
    <value>Enter Phone</value>
  </data>
  <data name="SendInfoToVet" xml:space="preserve">
    <value>Would you like to send the consultation info to your current vet?</value>
  </data>
  <data name="ServiceCharge" xml:space="preserve">
    <value>Service charge - $25 for one e-consultation service</value>
  </data>
  <data name="SetupInformation" xml:space="preserve">
    <value>Setup Information</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Step 1</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Step 2</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>Step 3</value>
  </data>
  <data name="Symptoms1PlaceHolder" xml:space="preserve">
    <value>Describe Symptoms 1</value>
  </data>
  <data name="Symptoms2PlaceHolder" xml:space="preserve">
    <value>Describe Symptoms 2</value>
  </data>
  <data name="Symptoms3PlaceHolder" xml:space="preserve">
    <value>Describe Symptoms 3</value>
  </data>
  <data name="SymptomsOfPet" xml:space="preserve">
    <value>Describe 3 key symptoms the Pet is experiencing</value>
  </data>
  <data name="TermsAndConditions" xml:space="preserve">
    <value>Terms &amp; Conditions.</value>
  </data>
  <data name="TimeOfEconsultation" xml:space="preserve">
    <value>What time would you like to have your consult?</value>
  </data>
  <data name="TimeZoneOfEconsultation" xml:space="preserve">
    <value>What time zone you will be in during this consultation?</value>
  </data>
  <data name="TimeZoneRequired" xml:space="preserve">
    <value>Timezone is required</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="BackEconsultation" xml:space="preserve">
    <value>Back to E-Consultation</value>
  </data>
  <data name="ContactTypePlaceHolder" xml:space="preserve">
    <value>Select Contact Type</value>
  </data>
  <data name="CountryPlaceHolder" xml:space="preserve">
    <value>Select Country</value>
  </data>
  <data name="TimeZonePlaceHolder" xml:space="preserve">
    <value>Select TimeZone</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>New E-Consultation</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="Address1PlaceHolder" xml:space="preserve">
    <value>Enter Address 1</value>
  </data>
  <data name="Address1Required" xml:space="preserve">
    <value>Address 1 is required</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="Address2PlaceHolder" xml:space="preserve">
    <value>Enter Address 2</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BillingAddress" xml:space="preserve">
    <value>Billing Address</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="CardRequiredNumber" xml:space="preserve">
    <value>Card number should be a number</value>
  </data>
  <data name="CardType" xml:space="preserve">
    <value>Credit Card Type</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CityPlaceHolder" xml:space="preserve">
    <value>Enter City</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>City is required</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Country is required</value>
  </data>
  <data name="CreaditCardValidation" xml:space="preserve">
    <value>Enter valid Credit Card</value>
  </data>
  <data name="CreditCardNumber" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="CreditCardNumberPlaceHolder" xml:space="preserve">
    <value>Enter Credit Card Number</value>
  </data>
  <data name="CreditCardNumberRequired" xml:space="preserve">
    <value>Credit Card Number is Required</value>
  </data>
  <data name="CreditCardType" xml:space="preserve">
    <value>Credit Card Type</value>
  </data>
  <data name="CreditCardTypePlaceHolder" xml:space="preserve">
    <value>Select Card Type</value>
  </data>
  <data name="CreditCardTypeRequired" xml:space="preserve">
    <value>Credit Card Type is Required</value>
  </data>
  <data name="CVV" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="CVVPlaceHolder" xml:space="preserve">
    <value>Enter Cvv Number</value>
  </data>
  <data name="CVVRequired" xml:space="preserve">
    <value>CVV Number is Required</value>
  </data>
  <data name="CVVRequiredNumber" xml:space="preserve">
    <value>CVV should be a Number</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>Expiration Date</value>
  </data>
  <data name="ExpirationDatePlaceHolder" xml:space="preserve">
    <value>Select Expiration Date</value>
  </data>
  <data name="ExpirationDateRequired" xml:space="preserve">
    <value>Expiration date is required</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NextStep1" xml:space="preserve">
    <value>Next Step</value>
  </data>
  <data name="Purchese" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="SamePermanantAddress" xml:space="preserve">
    <value>Same as Permanent Address?</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StatePlaceHolder" xml:space="preserve">
    <value>Select State</value>
  </data>
  <data name="StateRequired" xml:space="preserve">
    <value>State is required</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
  <data name="ZipPlaceHolder" xml:space="preserve">
    <value>Enter Zip</value>
  </data>
  <data name="ZipRequired" xml:space="preserve">
    <value>Zip is required</value>
  </data>
  <data name="ZipRequiredNumber" xml:space="preserve">
    <value>Zip should be a number</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="ClickHere" xml:space="preserve">
    <value>Click here</value>
  </data>
  <data name="SelectCurrentVet" xml:space="preserve">
    <value>Select current vet</value>
  </data>
  <data name="Symptoms1" xml:space="preserve">
    <value>Symptoms1</value>
  </data>
  <data name="Symptoms2" xml:space="preserve">
    <value>Symptoms2</value>
  </data>
  <data name="Symptoms3" xml:space="preserve">
    <value>Symptoms3</value>
  </data>
  <data name="PetType" xml:space="preserve">
    <value>Pet Type</value>
  </data>
  <data name="SelectPet" xml:space="preserve">
    <value>Select Pet</value>
  </data>
  <data name="AddSuccessfullMessage" xml:space="preserve">
    <value>You have successfully raised ECONSULTATION for your pet.</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EC_ID" xml:space="preserve">
    <value>EC ID</value>
  </data>
  <data name="EmailMsg" xml:space="preserve">
    <value>An email has been sent to the Veterinarian Expert to review your request.</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Order_Number" xml:space="preserve">
    <value>Order Number</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Thank You!</value>
  </data>
  <data name="Message1" xml:space="preserve">
    <value>This transaction has been approved</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>TryAgain</value>
  </data>
  <data name="Invalidemail" xml:space="preserve">
    <value>Please enter a valid email address.</value>
  </data>
  <data name="InValidPhone" xml:space="preserve">
    <value>Please enter a valid phone number</value>
  </data>
  <data name="ConsultationDatePlaceHolder" xml:space="preserve">
    <value>Enter Date</value>
  </data>
  <data name="ConsultationTimePlaceHolder" xml:space="preserve">
    <value>Enter Time</value>
  </data>
  <data name="PetConditionPlaceHolder1" xml:space="preserve">
    <value>Enter Pet Condition</value>
  </data>
  <data name="BillingCountry" xml:space="preserve">
    <value>Billing Country</value>
  </data>
  <data name="BillingState" xml:space="preserve">
    <value>Billing State</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="SaveChange" xml:space="preserve">
    <value>SaveChange</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="EconsultationStatus" xml:space="preserve">
    <value>EconsultationStatus</value>
  </data>
  <data name="StatusRequiredField" xml:space="preserve">
    <value>Econsultation Status is required</value>
  </data>
  <data name="Insurance_Add_Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Insurance_Add_PhonNumberFormat" xml:space="preserve">
    <value>Please Enter Valid Phone Number</value>
  </data>
</root>
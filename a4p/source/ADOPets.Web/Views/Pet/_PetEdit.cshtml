@using ADOPets.Web.Common.Extensions
@using Resources = ADOPets.Web.Resources.Wording
@model ADOPets.Web.ViewModels.Pet.CardViewModel
@using Model

@using (Ajax.BeginForm("CardEdit", "Pet", new AjaxOptions
        {
            UpdateTargetId = "petdetails",
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            OnSuccess = "SubmitSuccesful"
        }, new { @id = "PetForm", @class = "form-horizontal defaultForm", @role = "form" }))
{
    @Html.HiddenFor(model => model.ImagePath)
    @Html.HiddenFor(model => model.CoverImage)
    @Html.AntiForgeryToken()
    <div class="column animated fadeInLeft">
        <div class="form-group">

            @Html.LabelRequiredFor(model => model.PetName, new { @class = "col-md-4 control-label" })

            <div class="col-md-8">
                @Html.TextBoxFor(model => model.PetName, new { @class = "form-control", placeholder = Resources.Pet_Card_PetNamePlaceHolder })
                @Html.ValidationMessageFor(model => model.PetName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelRequiredFor(model => model.PetType, new { @class = "col-md-4 control-label" })

            <div class="col-md-8">
                @Html.EnumDropDownListFor(m => m.PetType, Resources.Pet_Card_PetTypePlaceHolder, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PetType)
                @Html.HiddenFor(model => model.CurrentPetType)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelRequiredFor(model => model.Breed, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Breed, new { @class = "form-control", placeholder = Resources.Pet_Card_BreedPlaceHolder })
                @Html.ValidationMessageFor(model => model.Breed)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SecondaryBreed, new { @class = "col-md-4 control-label" })

            <div class="col-md-8">
                @Html.TextBoxFor(model => model.SecondaryBreed, new { @class = "form-control", placeholder = Resources.Pet_Card_BreedPlaceHolder })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pedigree, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Pedigree, new { @class = "form-control", placeholder = Resources.Pet_Card_PedigreePlaceHolder })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroupType, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.BloodGroupType, Resources.Pet_Card_BloodGroupTypePlaceHolder, new { @class = "form-control" })
                @*                @Html.ValidationMessageFor(model => model.BloodGroupType)*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ChipNumber, new { @class = "col-md-4 control-label" })

            <div class="col-md-8">
                @Html.TextBoxFor(model => model.ChipNumber, new { @class = "form-control", placeholder = Resources.Pet_Card_ChipNumberPlaceHolder })
                @Html.ValidationMessageFor(model => model.ChipNumber)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TattooNumber, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.TattooNumber, new { @class = "form-control", placeholder = Resources.Pet_Card_TattooNumberPlaceHolder })
                @Html.ValidationMessageFor(model => model.TattooNumber)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(m => m.Gender, @Resources.Pet_Add_GenderPlaceHolder, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AdoptionDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                <div class="input-group date">
                    @Html.TextBoxFor(model => model.AdoptionDate, new { @class = "form-control datepicker datepickerPast", placeholder = Resources.Pet_Card_AdoptionDatePlaceHolder, @Value = Model.AdoptionDate.HasValue ? Model.AdoptionDate.Value.ToString("d") : string.Empty })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
            </div>
        </div>
    </div>
    <div class="column animated fadeInLeft">
        <div class="form-group">
            @Html.LabelRequiredFor(model => model.BirthDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                <div class="input-group date">
                    @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control datepicker datepickerForPetBirthday", placeholder = Resources.Pet_Card_BirthDatePlaceHolder, @Value = Model.BirthDate.ToString("d") })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                @Html.ValidationMessageFor(model => model.BirthDate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfBirth, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.PlaceOfBirth, new { @class = "form-control", placeholder = Resources.Pet_Card_PlaceOfBirthPlaceHolder })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryOfBirth, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(m => m.CountryOfBirth, Resources.Pet_Card_CountryOfBirthPlaceHolder, new { @class = "form-control" })
            </div>
        </div>
         @if (ADOPets.Web.Common.Helpers.DomainHelper.GetDomain() != DomainTypeEnum.French)
         { 
        <div class="form-group">
            @Html.LabelFor(model => model.StateOfBirth, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(m => m.StateOfBirth, new List<SelectListItem>(), Resources.Pet_Card_StateOfBirthPlaceHolder, new { @class = "form-control" })
            </div>
        </div>
         }
        <div class="form-group">
            @Html.LabelFor(model => model.Zip, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Zip, new { @class = "form-control", placeholder = Resources.Pet_Card_ZipPlaceHolder, @data_bv_field = "zipcode" })
                @Html.ValidationMessageFor(model => model.Zip)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HairType, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(m => m.HairType, Resources.Pet_Card_HairTypePlaceHolder, new { @class = "form-control valid" })
                @Html.HiddenFor(m => m.CurrentHairType)
                @Html.ValidationMessageFor(model => model.HairType)
            </div>
        </div>
        <div class="form-group" id="hairTypediv">
            @Html.LabelFor(model => model.HairTypeOther, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.HairTypeOther, new { @class = "form-control", placeholder = Resources.Pet_Card_HairTypeOtherPlaceHolder })
                @Html.ValidationMessageFor(model => model.HairTypeOther)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Color, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(m => m.Color, Resources.Pet_Card_ColorPlaceHolder, new { @class = "form-control" })
                @Html.HiddenFor(m => m.CurrentColor)
                @Html.ValidationMessageFor(model => model.Color)
            </div>
        </div>
        <div class="form-group" id="otherColor">
            @Html.LabelFor(model => model.ColorOther, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.ColorOther, new { @class = "form-control", placeholder = Resources.Pet_Card_ColorOtherPlaceHolder })
                @Html.ValidationMessageFor(model => model.ColorOther)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsSterile, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.RadioButtonFor(m => m.IsSterile, true)
                @Html.LabelFor(m => m.IsSterile, Resources.Pet_Card_IsSterileYes)
                &nbsp;&nbsp;&nbsp;
                    @Html.RadioButtonFor(m => m.IsSterile, false, new { id = "IsSterile_No" })
                @Html.Label("IsSterile_No", Resources.Pet_Card_IsSterileNo)
                &nbsp;&nbsp;&nbsp;
                @if (string.IsNullOrEmpty(Model.IsSterile.ToString()))
                {              
                    @Html.RadioButtonFor(m => m.IsSterile, "null", new { id = "IsSterile_Unknown", Checked = "checked" })
                    @Html.Label("IsSterile_No", Resources.Pet_Card_IsSterileUnknown)
                }
                else
                {
                    @Html.RadioButtonFor(m => m.IsSterile, "null", new { id = "IsSterile_Unknown" })
                    @Html.Label("IsSterile_No", Resources.Pet_Card_IsSterileUnknown)
                }
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <hr>
    <div class="column animated fadeInLeft">
        <a id="cancelPetButton" href="@Url.Action("CardDetails", "Pet", new { id = Model.Id })" class="btn btn-warning btn-lg pull-right" style="margin-right: 15px;">@Resources.Pet_Card_CancelButton</a>
    </div>
    <div class="column animated fadeInLeft">
        <button id="btnSaveChanges" type="submit" class="btn btn-success btn-lg" style="margin-left: 15px;">@Resources.Pet_Card_OKButton</button>
    </div>
    <div class="clearfix"></div>
}
<script src="@Url.Content("~/Scripts/external/jquery.form.min.js")"></script>
<script src="@Url.Content("~/Scripts/customs/views/Pet/CardEdit.js")"></script>
<script src="@Url.Content("~/Scripts/customs/views/Pet/CardForm.js")"></script>

@using ADOPets.Web.Common.Enums
@using ADOPets.Web.Common.Extensions
@using Resources = ADOPets.Web.Resources.Wording

@model ADOPets.Web.ViewModels.Document.EditViewModel

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@Resources.CloseButton</span></button>
            <h4 class="modal-title" id="myModalLabel">@Resources.Document_Edit_Title</h4>
        </div>
        @using (Ajax.BeginForm("Edit", "Document", new AjaxOptions
        {
            UpdateTargetId = MedicalRecordTypeEnum.Document.ToString(),
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            OnSuccess = "CloseDialogDocument"
        }, new { @id = "editDocumentForm", @class = "form-horizontal defaultForm", @role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">

                @Html.HiddenFor(model => model.PetId)
                @Html.HiddenFor(model => model.DocumentId)

                <div class="form-group">
                    @Html.LabelFor(model => model.DocumentType, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EnumDropDownListFor(model => model.DocumentType, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DocumentSubType, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EnumDropDownListFor(model => model.DocumentSubType, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.Name, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = Resources.Document_Edit_NamePlaceHolder })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelRequiredFor(model => model.ServiceDate, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ServiceDate, new { @class = "form-control datepicker datepickerPast", placeholder = Resources.Document_Edit_ServiceDatePlaceHolder, @Value = Model.ServiceDate.ToString("d") })
                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.ServiceDate)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", @rows = "3", placeholder = Resources.Document_Edit_CommentPlaceHolder })
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">@Resources.Document_Edit_SaveChanges</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Document_Edit_Cancel</button>
            </div>
        }
    </div>
</div>

<script src="~/Scripts/customs/views/Document/DocumentForm.js"></script>
